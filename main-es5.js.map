{"version":3,"sources":["webpack:///ngx-infi-markdown/src/lib/_core/components/editor/editor.component.html","webpack:///ngx-infi-markdown/src/lib/_core/components/editor/editor.component.ts","webpack:///ngx-infi-markdown/src/lib/_core/components/min-toolbar/min-toolbar.component.ts","webpack:///ngx-infi-markdown/src/lib/_core/components/min-toolbar/min-toolbar.component.html","webpack:///ngx-infi-markdown/src/lib/_core/components/preview/preview.component.ts","webpack:///ngx-infi-markdown/src/lib/_core/components/preview/preview.component.html","webpack:///ngx-infi-markdown/src/lib/_core/components/tooltip/tooltip.component.ts","webpack:///ngx-infi-markdown/src/lib/_core/configs/index.ts","webpack:///ngx-infi-markdown/src/lib/_core/directives/resizable.directive.ts","webpack:///ngx-infi-markdown/src/lib/_core/directives/tooltip.directive.ts","webpack:///ngx-infi-markdown/src/lib/_core/pipes/sanitizeHtml.pipe.ts","webpack:///ngx-infi-markdown/src/lib/_core/services/storage.service.ts","webpack:///ngx-infi-markdown/src/lib/_core/services/tree.service.ts","webpack:///ngx-infi-markdown/src/lib/_core/utils/index.ts","webpack:///ngx-infi-markdown/src/lib/ngx-infi-markdown.component.ts","webpack:///ngx-infi-markdown/src/lib/ngx-infi-markdown.module.ts","webpack:///ngx-infi-markdown/src/lib/ngx-infi-markdown.service.ts","webpack:///ngx-infi-markdown/src/public-api.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["BR_ELEMENT","STORAGE_KEY","EditorComponent","renderer","treeService","resolver","resizableDirective","storageService","toolbarState$","toolbarStateObs$","asObservable","pipe","tagsMap","Map","destroy$","savedEntity","getItem","loadEntity","window","typed","subscribe","setItem","entity","isOpened","toggleToolbar","onWidthChange","value","pxWidth","hiddenSegments","largestSegmentWidth","openedToolbar","next","repaintEditor","toolbarChildren","Array","from","toolbar","nativeElement","children","Math","max","map","o","clientWidth","set","hPrimaryEl","hSecondaryEl","hTertiaryEl","hQuaternaryEl","olEl","ulEl","paragraphEl","quoteEl","divs","changes","data","activeRow","_results","focus","complete","componentRef","destroy","entityValues","rows","range","length","setTimeout","forEach","div","i","innerHTML","event","rowNo","rowData","getEntityRow","instance","activeTag","refreshView","prevActive","tag","removeClass","get","addClass","ref","preventDefault","clipboardData","pastedData","getData","payload","text","opName","updateEntityTree","target","key","end","shiftKey","indexes","correctionGrade","caretPosition","some","index","divisionIndex","beginText","slice","endText","replace","RegExp","insertEntityRow","high","previousRowData","divAffected","find","x","removeEntityRow","childNodes","nextRowData","includes","toArray","tagName","hamburgerRef","classList","toggle","container","clear","factory","resolveComponentFactory","createComponent","onTagSelect","rowTagName","onTagSet","selector","templateUrl","styleUrls","read","Range","low","step","Symbol","iterator","MinToolbarComponent","PreviewComponent","content$","contentOb$","TooltipComponent","config","host","offsetTop","offsetLeft","clientHeight","containerEl","spaceUp","min","top","left","template","USER_STYLE_CONFIG","ResizableDirective","el","resizableGrabWidth","resizableMinWidth","dragging","containerWidth","windowWidth","innerWidth","style","setWidth","clientX","stopPropagation","isInDragRegion","cursor","width","newWidth","percWidth","emit","evt","exportAs","TooltipDirective","injector","vcr","create","providers","provide","useValue","generateContent","Object","prototype","toString","call","content","element","createText","context","viewRef","createEmbeddedView","rootNodes","location","SanitizeHtmlPipe","sanitizer","bypassSecurityTrustHtml","name","SessionStorageService","JSON","parse","sessionStorage","stringify","removeItem","providedIn","LocalStorageService","localStorage","StorageService","defaultStyles","primaryHeader","htmlTag","styles","secondaryHeader","tertiaryHeader","quaternaryHeader","orderedList","parentHtmlTag","unorderedList","paragraph","quote","color","padding","defaultEntities","htmlContent","TreeService","toggleStyles$","toggleStylesObs$","entity$","listenForStyleChange","_entity","setEntityTree","state","setStyles","rebuildAllSegments","buildView","loadCustomStyles","userStyles","constructor","entries","pickStyles","console","warn","shouldOverride","isGlobalConfig","entityTree","singleRow","splice","row","updateRowNos","textToAppend","upperEntity","createSegment","currentText","currentTag","html","_content","segment","listElementType","checkListType","injectInlineStyles","entityTreeIndex","attributes","push","keys","k","v","join","sanitizedStyles","properKey","m","toLowerCase","isArray","filter","font","str","test","node_walk","node","func","result","firstChild","nextSibling","getCaretPosition","elem","sel","getSelection","cum_length","anchorNode","anchorOffset","extentOffset","nodes_to_find","extentNode","contains","undefined","found","textContent","setCaretAtPosition","cp","nodeValue","document","createRange","setStart","setEnd","selection","removeAllRanges","addRange","findAllOccurrencesOfPattern","pattern","indexOf","calculateCorrection","patternLength","finish","calculateCaretPosition","ind","nodeType","Node","TEXT_NODE","objectCloneDeep","obj","matched","on","otherwise","match","pred","fn","NgxInfiMarkdownComponent","styleConfig","setUserStyles","previewWidth","status","checked","toggleStyles","handleWidthChange","encapsulation","None","NgxInfiMarkdownModule","storageType","ngModule","useFactory","declarations","imports","exports","NgxInfiMarkdownService","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","id","AppComponent","articleStyles","fontFamily","textAlign","fontSize","fontWeight","margin","letterSpacing","fontStyle","borderLeft","AppModule","forRoot","bootstrap","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["<!-- Tag selector -->\n<div [style.height]=\"hiddenSegments ? '70px' : 'auto'\" class=\"tags\">\n    <div class=\"tag-col tag-col--1\"></div>\n    <div #toolbar class=\"tag-col tag-col--2\">\n        <div #hamburger *ngIf=\"hiddenSegments\" class=\"hamburger\" (click)=\"openToolbar(hamburger)\">\n            <div class=\"bar1\"></div>\n            <div class=\"bar2\"></div>\n            <div class=\"bar3\"></div>\n        </div>\n\n        <div [style.visibility]=\"hiddenSegments ? 'hidden' : 'visible' \" class=\"tag-segments\">\n            <span class=\"tag-info\">Headers</span>\n            <div class=\"separator\"></div>\n            <div #h1 tooltip=\"Primary header\" (click)=\"onTagSet('primaryHeader')\" class=\"tag tag--h1\">1</div>\n            <div #h2 tooltip=\"Secondary header\" (click)=\"onTagSet('secondaryHeader')\" class=\"tag tag--h2\">2</div>\n            <div #h3 tooltip=\"Tertiary header\" (click)=\"onTagSet('tertiaryHeader')\" class=\"tag tag--h3\">3</div>\n            <div #h4 tooltip=\"Quaternary header\" (click)=\"onTagSet('quaternaryHeader')\" class=\"tag tag--h4\">4</div>\n        </div>\n\n        <div [style.visibility]=\"hiddenSegments ? 'hidden' : 'visible' \" class=\"tag-segments\">\n            <span class=\"tag-info\">Text</span>\n            <div class=\"separator\"></div>\n            <div #paragraph tooltip=\"Paragraph\" (click)=\"onTagSet('paragraph')\" class=\"tag tag--paragraph\">p</div>\n            <div #quote tooltip=\"Quote\" (click)=\"onTagSet('quote')\" class=\"tag tag--quote\">\n              <img src=\"../../../../assets/quote.png\">\n            </div>\n        </div>\n\n        <div [style.visibility]=\"hiddenSegments ? 'hidden' : 'visible' \" class=\"tag-segments\">\n            <span class=\"tag-info\">Lists</span>\n            <div class=\"separator\"></div>\n            <div #ol tooltip=\"Ordered list\" (click)=\"onTagSet('orderedList')\" class=\"tag tag--ol\">\n                <img src=\"../../../../assets/ordered-list.png\">\n            </div>\n            <div #ul tooltip=\"Unordered list\" (click)=\"onTagSet('unorderedList')\" class=\"tag tag--ul\">\n                <img src=\"../../../../assets/unordered-list.png\">\n            </div>\n          </div>\n    </div>\n</div>\n\n<!-- Toolbar for resized editor -->\n<div>\n    <template #toolbarContainer></template>\n</div>\n\n<!-- Editor -->\n<div\n    *ngFor=\"let i of rows\"\n    class=\"line\"\n>\n    <div\n        [style.backgroundColor]=\"i === activeRow ? '#E0E5EB' : '#F4F7FA'\"\n        class=\"number\"\n    >{{ i }}\n    </div>\n\n    <div\n        #editableDiv\n        [style.backgroundColor]=\"i === activeRow ? '#F7FAFC' : '#FFFFFF'\"\n        (paste)=\"onPaste($event, i, editableDiv)\"\n        (focus)=\"onFocus($event, i)\"\n        (input)=\"onTextTyped($event, i)\"\n        (keydown)=\"onKeyEntered($event, i)\"\n        (keypress)=\"onKeyPressed($event, i)\"\n        contenteditable=\"true\"\n        class=\"input\"\n    >\n    </div>\n</div>","import {\n  Component,\n  OnInit,\n  QueryList,\n  ViewChildren,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  ComponentRef,\n  OnDestroy,\n  Inject,\n} from '@angular/core';\nimport { Subject, Observable, merge, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, take } from 'rxjs/operators';\nimport { MinToolbarComponent } from '../min-toolbar/min-toolbar.component';\nimport { TreeService } from '../../services/tree.service';\nimport { Payload } from '../../models/Payload';\nimport { Tag } from '../../models/Tag';\nimport {\n  calculateCaretPosition,\n  calculateCorrection,\n  findAllOccurrencesOfPattern,\n  getCaretPosition,\n  setCaretAtPosition,\n} from '../../utils';\nimport { ResizableDirective } from '../../directives/resizable.directive';\nimport { StorageService } from '../../services/storage.service';\nimport { Entity } from '../../models/Entity';\n\nconst BR_ELEMENT = '<br>';\nconst STORAGE_KEY = 'INFI_MARKDOWN_DRAFT';\n\n@Component({\n  selector: 'editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss'],\n})\nexport class EditorComponent implements OnInit, AfterViewInit, OnDestroy {\n  rows: Range;\n  width: number;\n  activeTag: Tag;\n  activeRow: number;\n  openedToolbar: boolean;\n  hiddenSegments: boolean;\n  largestSegmentWidth: number;\n  componentRef: ComponentRef<MinToolbarComponent>;\n\n  private toolbarState$: Subject<boolean> = new Subject<boolean>();\n  toolbarStateObs$: Observable<boolean> = this.toolbarState$.asObservable().pipe(distinctUntilChanged());\n\n  private destroy$: Subject<void>;\n\n  @ViewChildren('editableDiv')\n  divs: QueryList<any>;\n\n  @ViewChild('h1')\n  hPrimaryEl: ElementRef<any>;\n\n  @ViewChild('h2')\n  hSecondaryEl: ElementRef<any>;\n\n  @ViewChild('h3')\n  hTertiaryEl: ElementRef<any>;\n\n  @ViewChild('h4')\n  hQuaternaryEl: ElementRef<any>;\n\n  @ViewChild('ol')\n  olEl: ElementRef<any>;\n\n  @ViewChild('ul')\n  ulEl: ElementRef<any>;\n\n  @ViewChild('paragraph')\n  paragraphEl: ElementRef<any>;\n\n  @ViewChild('quote')\n  quoteEl: ElementRef<any>;\n\n  @ViewChild('toolbar')\n  toolbar: ElementRef<any>;\n\n  @ViewChild('toolbarContainer', { read: ViewContainerRef }) container;\n\n  tagsMap: Map<string, ElementRef>;\n\n  constructor(\n    private renderer: Renderer2,\n    private treeService: TreeService,\n    private resolver: ComponentFactoryResolver,\n    private resizableDirective: ResizableDirective,\n    @Inject(StorageService) private storageService: StorageService,\n  ) {\n    this.tagsMap = new Map<string, ElementRef>();\n    this.destroy$ = new Subject<void>();\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (this.storageService) {\n      const savedEntity: Entity[] | null = this.storageService.getItem(STORAGE_KEY) || null;\n      this.treeService.loadEntity(savedEntity);\n    } else {\n      this.treeService.loadEntity(null);\n    }\n\n    merge(\n      fromEvent(window, 'beforeunload'),\n      this.destroy$\n    ).pipe(\n      takeUntil(this.destroy$),\n      filter(() => this.treeService.typed),\n      take(1),\n    ).subscribe(() => {\n      this.storageService.setItem(STORAGE_KEY, this.treeService.entity);\n    })\n\n    this.toolbarStateObs$.pipe(takeUntil(this.destroy$)).subscribe((isOpened: boolean) => {\n      this.toggleToolbar(isOpened);\n    });\n\n    this.resizableDirective.onWidthChange.pipe(takeUntil(this.destroy$)).subscribe(({ pxWidth: value }) => {\n      this.hiddenSegments = value < this.largestSegmentWidth + 100;\n\n      if (!this.hiddenSegments) {\n        this.openedToolbar = this.hiddenSegments;\n        this.toolbarState$.next(this.openedToolbar);\n      }\n    });\n\n    this.repaintEditor();\n  }\n\n  ngAfterViewInit(): void {\n    const toolbarChildren = Array.from(this.toolbar.nativeElement.children);\n    this.largestSegmentWidth = Math.max(...toolbarChildren.map((o: HTMLElement) => o.clientWidth), 0);\n\n    this.tagsMap\n      .set('primaryHeader', this.hPrimaryEl)\n      .set('secondaryHeader', this.hSecondaryEl)\n      .set('tertiaryHeader', this.hTertiaryEl)\n      .set('quaternaryHeader', this.hQuaternaryEl)\n      .set('orderedList', this.olEl)\n      .set('unorderedList', this.ulEl)\n      .set('paragraph', this.paragraphEl)\n      .set('quote', this.quoteEl);\n\n    this.divs.changes.pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n      this.activeRow && data._results[this.activeRow - 1].nativeElement.focus();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.componentRef.destroy();\n  }\n\n  private repaintEditor(): void {\n    const entityValues = this.treeService.entityValues;\n    this.rows = range(1, entityValues.length);\n\n    setTimeout(() => {\n      this.divs.forEach((div, i) => {\n        div.nativeElement.innerHTML = entityValues[i] || '';\n      });\n    });\n  }\n\n  onFocus(event: FocusEvent, rowNo: number): void {\n    const rowData = this.treeService.getEntityRow(rowNo);\n    this.activeRow = rowNo;\n\n    // temporarily switched off\n    // const caretPosition = rowData.text.replace(new RegExp(BR_ELEMENT, 'g'), '').length;\n    // if (caretPosition > 0) {\n    //   setTimeout(() => {\n    //     setCaretAtPosition(caretPosition, event.target.lastChild);\n    //   });\n    // }\n\n    if (this.openedToolbar) {\n      this.componentRef.instance.activeRow = rowNo;\n      this.componentRef.instance.activeTag = this.activeTag;\n      this.componentRef.instance.refreshView(rowData);\n      return;\n    }\n\n    const prevActive = this.activeTag;\n    this.activeTag = rowData.tag;\n\n    if (this.activeTag && this.activeTag !== rowData.tag) {\n      this.renderer.removeClass(this.tagsMap.get(this.activeTag).nativeElement, 'tag--selected');\n    }\n\n    if (prevActive && prevActive !== this.activeTag) {\n      this.renderer.removeClass(this.tagsMap.get(prevActive).nativeElement, 'tag--selected');\n    }\n\n    this.renderer.addClass(this.tagsMap.get(rowData.tag).nativeElement, 'tag--selected');\n  }\n\n  onPaste(event: ClipboardEvent, rowNo: number, ref: any): void {\n    event.preventDefault();\n\n    const clipboardData = event.clipboardData;\n    const pastedData = clipboardData.getData('Text');\n\n    ref.innerHTML = pastedData;\n\n    const payload = {\n      rowNo,\n      text: pastedData,\n      opName: 'addText',\n    } as Partial<Payload>;\n\n    this.treeService.updateEntityTree(payload);\n  }\n\n  onTextTyped(event: InputEvent, rowNo: number): void {\n    const payload = {\n      rowNo,\n      text: (event.target as any).innerHTML,\n      opName: 'addText',\n    } as Partial<Payload>;\n\n    this.treeService.updateEntityTree(payload);\n  }\n\n  onKeyPressed(event: KeyboardEvent, rowNo: number): void {\n    const rowData = this.treeService.getEntityRow(rowNo);\n\n    if (event.key === 'Enter') {\n      const [, end] = getCaretPosition(event.target);\n\n      if (!event.shiftKey) {\n        event.preventDefault();\n\n        const indexes = findAllOccurrencesOfPattern(rowData.text, BR_ELEMENT);\n        const correctionGrade = calculateCorrection(end, indexes, BR_ELEMENT.length);\n\n        const caretPosition = indexes.some((index) => end >= index && end < index + BR_ELEMENT.length) ? 0 : end;\n        const divisionIndex = caretPosition + correctionGrade * BR_ELEMENT.length;\n\n        const beginText = rowData.text.slice(0, divisionIndex);\n        const endText = rowData.text.slice(divisionIndex).replace(new RegExp(`^${BR_ELEMENT}`), '');\n\n        const rows: Array<Payload> = [\n          {\n            rowNo,\n            text: beginText,\n            tag: rowData.tag,\n            opName: 'addRow',\n          },\n          {\n            rowNo: rowNo + 1,\n            text: endText,\n            tag: rowData.tag,\n            opName: 'addRow',\n          },\n        ];\n\n        this.treeService.insertEntityRow(rowNo, rows);\n        this.activeRow = rowNo + 1;\n\n        this.repaintEditor();\n      }\n    }\n  }\n\n  onKeyEntered(event: KeyboardEvent, rowNo: number): void {\n    const { high } = this.rows;\n    const rowData = this.treeService.getEntityRow(rowNo);\n    const [, end] = getCaretPosition(event.target);\n\n    if (event.key === 'Backspace') {\n      if (high === 1 || this.activeRow === 1 || end > 0) {\n        // } || end === 0 && rowData.text.startsWith(BR_ELEMENT)) {\n        return;\n      }\n\n      const previousRowData = this.treeService.getEntityRow(rowNo - 1);\n      const text = rowData.text === BR_ELEMENT ? '' : rowData.text;\n\n      const indexes = findAllOccurrencesOfPattern(previousRowData.text, BR_ELEMENT);\n      const correctionGrade = calculateCorrection(previousRowData.text.length, indexes, BR_ELEMENT.length);\n\n      const divAffected = this.divs.find((x, i) => i === rowNo - 2).nativeElement;\n      const caretPosition = calculateCaretPosition(divAffected, correctionGrade * 2);\n\n      this.treeService.removeEntityRow(rowNo, text);\n      this.repaintEditor();\n      this.activeRow -= 1;\n\n      if (caretPosition > 0) {\n        setTimeout(() => {\n          setCaretAtPosition(caretPosition, divAffected.childNodes[correctionGrade * 2]);\n        });\n      }\n    } else if (event.key === 'Delete') {\n      if (end !== rowData.text.replace(new RegExp(BR_ELEMENT, 'g'), '').length || rowNo === high) {\n        return;\n      }\n      event.preventDefault();\n\n      const indexes = findAllOccurrencesOfPattern(rowData.text, BR_ELEMENT);\n      const correctionGrade = calculateCorrection(rowData.text.length, indexes, BR_ELEMENT.length);\n\n      const divAffected = this.divs.find((x, i) => i === rowNo - 1).nativeElement;\n      const caretPosition = calculateCaretPosition(divAffected, correctionGrade * 2);\n\n      const nextRowData = this.treeService.getEntityRow(rowNo + 1);\n      const text = nextRowData.text; // === BR_ELEMENT ? '' : nextRowData.text;\n\n      this.treeService.removeEntityRow(rowNo + 1, text);\n      this.repaintEditor();\n\n      if (caretPosition > 0) {\n        setTimeout(() => {\n          setCaretAtPosition(caretPosition, divAffected.childNodes[correctionGrade * 2]);\n        });\n      }\n    } else if (event.key === 'ArrowUp') {\n      if (this.activeRow === 1 || (end !== 0 && rowData.text.includes(BR_ELEMENT))) {\n        return;\n      }\n\n      this.activeRow -= 1;\n      this.divs.toArray()[this.activeRow - 1].nativeElement.focus();\n    } else if (event.key === 'ArrowDown') {\n      if (\n        this.activeRow === high ||\n        (end !== rowData.text.replace(new RegExp(BR_ELEMENT, 'g'), '').length && rowData.text.includes(BR_ELEMENT))\n      ) {\n        return;\n      }\n\n      this.activeRow += 1;\n      this.divs.toArray()[this.activeRow - 1].nativeElement.focus();\n    }\n  }\n\n  onTagSet(tagName: Tag) {\n    if (!this.activeRow) {\n      return;\n    }\n\n    this.activeTag = tagName;\n\n    const { tag = null } = this.treeService.getEntityRow(this.activeRow);\n\n    const payload = {\n      rowNo: this.activeRow,\n      tag: tagName,\n      opName: 'setTag',\n    } as Partial<Payload>;\n\n    this.treeService.updateEntityTree(payload);\n\n    if (tag) {\n      this.renderer.removeClass(this.tagsMap.get(tag).nativeElement, 'tag--selected');\n    }\n\n    this.renderer.addClass(this.tagsMap.get(tagName).nativeElement, 'tag--selected');\n\n    this.divs.toArray()[this.activeRow - 1].nativeElement.focus();\n  }\n\n  openToolbar(hamburgerRef: any): void {\n    hamburgerRef.classList.toggle('change');\n    this.openedToolbar = !this.openedToolbar;\n    this.toolbarState$.next(this.openedToolbar);\n  }\n\n  toggleToolbar(isOpened: boolean): void {\n    if (!this.activeRow) {\n      return;\n    }\n\n    if (!isOpened) {\n      this.container.clear();\n    } else {\n      const factory: ComponentFactory<MinToolbarComponent> = this.resolver.resolveComponentFactory(MinToolbarComponent);\n      this.componentRef = this.container.createComponent(factory);\n      this.componentRef.instance.activeRow = this.activeRow;\n      this.componentRef.instance.onTagSelect.pipe(takeUntil(this.destroy$)).subscribe(({ tagName, rowTagName }) => {\n        const prevActive = this.activeTag;\n        this.activeTag = tagName;\n\n        if (this.activeTag && this.activeTag !== rowTagName) {\n          this.renderer.removeClass(this.tagsMap.get(rowTagName).nativeElement, 'tag--selected');\n        }\n\n        if (prevActive && prevActive !== this.activeTag) {\n          this.renderer.removeClass(this.tagsMap.get(prevActive).nativeElement, 'tag--selected');\n        }\n\n        this.renderer.addClass(this.tagsMap.get(this.activeTag).nativeElement, 'tag--selected');\n      });\n    }\n  }\n}\n\nexport class Range implements Iterable<number> {\n  constructor(public readonly low: number, public readonly high: number, public readonly step: number = 1) {}\n\n  *[Symbol.iterator]() {\n    for (let i = this.low; i <= this.high; i += this.step) {\n      yield i;\n    }\n  }\n}\n\nfunction range(low: number, high: number) {\n  return new Range(low, high);\n}\n","import { Component, Input, Output, EventEmitter, Renderer2, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Tag } from '../../models/Tag';\nimport { TreeService } from '../../services/tree.service';\nimport { Payload } from '../../models/Payload';\nimport { Entity } from '../../models/Entity';\n\n@Component({\n  selector: 'min-toolbar',\n  templateUrl: './min-toolbar.component.html',\n  styleUrls: ['./min-toolbar.component.scss'],\n})\nexport class MinToolbarComponent implements AfterViewInit {\n  @Input()\n  activeRow: number;\n\n  @Input()\n  activeTag: Tag;\n\n  @Output()\n  onTagSelect: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('h1')\n  hPrimaryEl: ElementRef<any>;\n\n  @ViewChild('h2')\n  hSecondaryEl: ElementRef<any>;\n\n  @ViewChild('h3')\n  hTertiaryEl: ElementRef<any>;\n\n  @ViewChild('h4')\n  hQuaternaryEl: ElementRef<any>;\n\n  @ViewChild('paragraph')\n  paragraphEl: ElementRef<any>;\n\n  @ViewChild('quote')\n  quoteEl: ElementRef<any>;\n\n  @ViewChild('ol')\n  olEl: ElementRef<any>;\n\n  @ViewChild('ul')\n  ulEl: ElementRef<any>;\n\n  tagsMap: Map<string, ElementRef>;\n\n  constructor(private renderer: Renderer2, private treeService: TreeService) {\n    this.tagsMap = new Map<string, ElementRef>();\n  }\n\n  ngAfterViewInit(): void {\n    this.tagsMap\n      .set('primaryHeader', this.hPrimaryEl)\n      .set('secondaryHeader', this.hSecondaryEl)\n      .set('tertiaryHeader', this.hTertiaryEl)\n      .set('quaternaryHeader', this.hQuaternaryEl)\n      .set('orderedList', this.olEl)\n      .set('unorderedList', this.ulEl)\n      .set('paragraph', this.paragraphEl)\n      .set('quote', this.quoteEl);\n\n    const { tag = null } = this.treeService.getEntityRow(this.activeRow);\n\n    if (tag) {\n      this.renderer.addClass(this.tagsMap.get(tag).nativeElement, 'tag--selected');\n    }\n  }\n\n  refreshView(rowData: Entity) {\n    if (this.activeTag && this.activeTag !== rowData.tag) {\n      this.renderer.removeClass(this.tagsMap.get(this.activeTag).nativeElement, 'tag--selected');\n    }\n\n    this.activeTag = rowData.tag;\n    this.onTagSelect.next({\n      tagName: this.activeTag,\n      rowTagName: rowData.tag,\n    });\n\n    this.renderer.addClass(this.tagsMap.get(rowData.tag).nativeElement, 'tag--selected');\n  }\n\n  onTagSet(tagName: Tag) {\n    if (!this.activeRow) {\n      return;\n    }\n\n    this.activeTag = tagName;\n\n    const { tag = null } = this.treeService.getEntityRow(this.activeRow);\n\n    const payload = {\n      rowNo: this.activeRow,\n      tag: tagName,\n      opName: 'setTag',\n    } as Partial<Payload>;\n\n    this.treeService.updateEntityTree(payload);\n\n    if (tag) {\n      this.renderer.removeClass(this.tagsMap.get(tag).nativeElement, 'tag--selected');\n    }\n\n    this.renderer.addClass(this.tagsMap.get(tagName).nativeElement, 'tag--selected');\n\n    this.onTagSelect.next({\n      tagName,\n      rowTagName: tag,\n    });\n  }\n}\n","<div class=\"toolbar\">\n    <div class=\"tag-segments\">\n        <div #h1 (click)=\"onTagSet('primaryHeader')\" class=\"tag tag--h1\">1</div>\n        <div #h2 (click)=\"onTagSet('secondaryHeader')\" class=\"tag tag--h2\">2</div>\n        <div #h3 (click)=\"onTagSet('tertiaryHeader')\" class=\"tag tag--h3\">3</div>\n        <div #h4 (click)=\"onTagSet('quaternaryHeader')\" class=\"tag tag--h4\">4</div>\n    </div>\n\n    <div class=\"tag-segments\">\n        <div #paragraph (click)=\"onTagSet('paragraph')\" class=\"tag tag--paragraph\">p</div>\n        <div #quote (click)=\"onTagSet('quote')\" class=\"tag tag--quote\"><img src=\"../../../../assets/quote.png\"></div>\n    </div>\n\n    <div class=\"tag-segments\">\n        <div #ol tooltip=\"Ordered list\" (click)=\"onTagSet('orderedList')\" class=\"tag tag--ol\">\n            <img src=\"../../../../assets/ordered-list.png\">\n        </div>\n        <div #ul tooltip=\"Unordered list\" (click)=\"onTagSet('unorderedList')\" class=\"tag tag--ul\">\n            <img src=\"../../../../assets/unordered-list.png\">\n        </div>\n      </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TreeService } from '../../services/tree.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss'],\n})\nexport class PreviewComponent implements OnInit {\n  content$: Observable<string>;\n\n  constructor(private treeService: TreeService) {\n    this.content$ = this.treeService.contentOb$;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"preview\" [innerHtml]=\"content$ | async | sanitizeHtml\"></div>","import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  template: `\n    <div #container class=\"tooltip-container\" [ngStyle]=\"{ top: top, left: left }\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./tooltip.component.scss'],\n})\nexport class TooltipComponent implements OnInit {\n  top: string;\n  left: string;\n\n  @ViewChild('container', { static: true })\n  containerEl: ElementRef;\n\n  constructor(@Inject('tooltipConfig') private config) {}\n\n  ngOnInit(): void {\n    const { offsetTop, offsetLeft } = this.config.host;\n    const { clientHeight } = this.containerEl.nativeElement;\n\n    const spaceUp = Math.min(clientHeight, 30);\n\n    this.top = `${offsetTop - spaceUp - 8}px`;\n    this.left = `${offsetLeft}px`;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { UserStyles } from '../models/Style';\n\nexport const USER_STYLE_CONFIG = new InjectionToken<UserStyles>('User Style Config');\n","import { Directive, ElementRef, OnInit, Input, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[appResizable]',\n  exportAs: 'appResizable',\n})\nexport class ResizableDirective implements OnInit {\n  @Input()\n  resizableGrabWidth = 2;\n\n  @Input()\n  resizableMinWidth = 100;\n\n  @Output()\n  onWidthChange: EventEmitter<any> = new EventEmitter<any>();\n\n  dragging = false;\n  windowWidth: number;\n  containerWidth: number;\n\n  constructor(public el: ElementRef) {\n    this.containerWidth = this.el.nativeElement.clientWidth;\n  }\n\n  ngOnInit(): void {\n    this.windowWidth = window.innerWidth;\n    this.el.nativeElement.style['border-right'] = this.resizableGrabWidth + 'px dashed #D3DAEA';\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = window.innerWidth;\n    this.setWidth(this.windowWidth / 2 - this.el.nativeElement.offsetLeft);\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onDrag(event: MouseEvent) {\n    if (!this.dragging) {\n      return;\n    }\n\n    if (this.containerWidth < event.clientX) {\n      return;\n    }\n\n    this.setWidth(event.clientX - this.el.nativeElement.offsetLeft);\n    event.stopPropagation();\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent) {\n    if (!this.dragging) {\n      return;\n    }\n\n    this.dragging = false;\n    event.stopPropagation();\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent) {\n    if (this.isInDragRegion(event)) {\n      this.dragging = true;\n      event.stopPropagation();\n    }\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMouseMove(event: MouseEvent) {\n    if (this.isInDragRegion(event) || this.dragging) {\n      this.el.nativeElement.style.cursor = 'col-resize';\n    } else {\n      this.el.nativeElement.style.cursor = 'default';\n    }\n  }\n\n  private setWidth(width: number): void {\n    const newWidth = Math.max(this.resizableMinWidth, width);\n    const percWidth = (newWidth / this.windowWidth) * 100;\n\n    this.el.nativeElement.style.width = percWidth + '%';\n    this.onWidthChange.emit({ percWidth, pxWidth: width });\n  }\n\n  private isInDragRegion(evt: MouseEvent): boolean {\n    return this.el.nativeElement.clientWidth - evt.clientX + this.el.nativeElement.offsetLeft < this.resizableGrabWidth;\n  }\n}\n","import {\n  Directive,\n  Input,\n  TemplateRef,\n  Type,\n  ComponentRef,\n  ElementRef,\n  Injector,\n  Renderer2,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  HostListener,\n  OnDestroy,\n} from '@angular/core';\nimport { TooltipComponent } from '../components/tooltip/tooltip.component';\n\n@Directive({\n  selector: '[tooltip]',\n})\nexport class TooltipDirective implements OnDestroy {\n  @Input('tooltip') content: string | TemplateRef<any> | Type<any>;\n\n  private componentRef: ComponentRef<TooltipComponent>;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    private vcr: ViewContainerRef,\n    private resolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  @HostListener('mouseenter')\n  onHover() {\n    if (this.componentRef) {\n      return;\n    }\n\n    const factory = this.resolver.resolveComponentFactory(TooltipComponent);\n    const injector = Injector.create({\n      providers: [\n        {\n          provide: 'tooltipConfig',\n          useValue: {\n            host: this.el.nativeElement,\n          },\n        },\n      ],\n    });\n    this.componentRef = this.vcr.createComponent(factory, 0, injector, this.generateContent());\n  }\n\n  @HostListener('mouseout')\n  onMouseLeave() {\n    this.destroy();\n  }\n\n  generateContent(): any[][] {\n    if (Object.prototype.toString.call(this.content) === '[object String]') {\n      const element = this.renderer.createText(this.content as string);\n      return [[element]];\n    } else if (this.content instanceof TemplateRef) {\n      const context = {};\n      const viewRef = this.content.createEmbeddedView(context);\n      return [viewRef.rootNodes];\n    } else {\n      const factory = this.resolver.resolveComponentFactory(this.content as Type<any>);\n      const componentRef = factory.create(this.injector);\n      return [[componentRef.location.nativeElement]];\n    }\n  }\n\n  destroy(): void {\n    this.componentRef && this.componentRef.destroy();\n    this.componentRef = null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml',\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(content: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(content);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionStorageService implements StorageService {\n    getItem<T>(key: string): T {\n        return JSON.parse(sessionStorage.getItem(key));\n    }\n\n    setItem<T>(key: string, value: any): void {\n        return sessionStorage.setItem(key, JSON.stringify(value));\n    }\n\n    removeItem(key: string): void {\n        return sessionStorage.removeItem(key);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService implements StorageService {\n    getItem<T>(key: string): T {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    setItem<T>(key: string, value: any): void {\n        return localStorage.setItem(key, JSON.stringify(value));\n    }\n    \n    removeItem(key: string): void {\n        return localStorage.removeItem(key);\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport abstract class StorageService {\n    abstract getItem<T>(key: string): T;\n    abstract setItem<T>(key: string, value: any): void;\n    abstract removeItem(key: string): void;\n} ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, take, switchMap } from 'rxjs/operators';\nimport { Entity } from '../models/Entity';\nimport { Payload } from '../models/Payload';\nimport { Tag } from '../models/Tag';\nimport { objectCloneDeep } from '../utils';\nimport { DefaultStyles, UserStyles, Style, SanitizedStyle } from '../models/Style';\n\nexport const defaultStyles: DefaultStyles = {\n  primaryHeader: {\n    htmlTag: 'h1',\n    styles: {\n      'font-size': '72px',\n      'letter-spacing': '.42px',\n      'font-weight': '600',\n    },\n  },\n  secondaryHeader: {\n    htmlTag: 'h2',\n    styles: {\n      'font-size': '32px',\n      'letter-spacing': '.42px',\n      'font-weight': '400',\n    },\n  },\n  tertiaryHeader: {\n    htmlTag: 'h3',\n    styles: {\n      'font-size': '32px',\n      'letter-spacing': '.42px',\n      'font-weight': '400',\n    },\n  },\n  quaternaryHeader: {\n    htmlTag: 'h4',\n    styles: {\n      'font-size': '25px',\n      'letter-spacing': '.42px',\n      'font-weight': '400',\n    },\n  },\n  orderedList: {\n    htmlTag: 'li',\n    parentHtmlTag: 'ol',\n    styles: {\n      'font-size': '21px',\n      'letter-spacing': '.42px',\n      'font-weight': '400',\n      'list-style-type': 'decimal',\n      'list-style-position': 'inside',\n    },\n  },\n  unorderedList: {\n    htmlTag: 'li',\n    parentHtmlTag: 'ul',\n    styles: {\n      'font-size': '21px',\n      'letter-spacing': '.42px',\n      'font-weight': '400',\n      'list-style-type': 'disc',\n      'list-style-position': 'inside',\n    },\n  },\n  paragraph: {\n    htmlTag: 'p',\n    styles: {\n      'font-size': '21px',\n      'letter-spacing': '.84px',\n    },\n  },\n  quote: {\n    htmlTag: 'div',\n    styles: {\n      'font-style': 'italic',\n      'font-size': '24px',\n      color: '#000',\n      'text-align': 'left',\n      'border-left': '1px solid #000',\n      padding: '15px 25px',\n    },\n  },\n};\n\nconst defaultEntities: Array<Entity> = [\n  {\n    rowNo: 1,\n    text: '',\n    tag: 'paragraph',\n    htmlContent: '',\n  },\n  {\n    rowNo: 2,\n    text: '',\n    tag: 'paragraph',\n    htmlContent: '',\n  },\n  {\n    rowNo: 3,\n    text: '',\n    tag: 'paragraph',\n    htmlContent: '',\n  },\n  {\n    rowNo: 4,\n    text: '',\n    tag: 'paragraph',\n    htmlContent: '',\n  },\n  {\n    rowNo: 5,\n    text: '',\n    tag: 'paragraph',\n    htmlContent: '',\n  },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TreeService {\n  private content$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  contentOb$: Observable<string> = this.content$.asObservable().pipe(distinctUntilChanged());\n\n  private toggleStyles$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  toggleStylesObs$: Observable<boolean> = this.toggleStyles$.asObservable().pipe(distinctUntilChanged());\n\n  private entity$: Subject<Entity[]> = new Subject<Entity[]>();\n\n  private entityTree: Entity[];\n  private userStyles: UserStyles;\n  private styles: DefaultStyles;\n  private isGlobalConfig: boolean;\n\n  constructor() {\n    this.listenForStyleChange();\n  }\n\n  private listenForStyleChange(): void {\n    this.entity$.asObservable().pipe(\n      take(1),\n      switchMap((entity: Entity[] | null) => {\n        const _entity = entity ? entity : defaultEntities;\n        this.setEntityTree(_entity);\n        \n        return this.toggleStylesObs$;\n      })\n    ).subscribe((state: boolean) => {\n      this.setStyles(state);\n      this.rebuildAllSegments();\n      this.content$.next(this.buildView());\n    });\n  }\n\n  private setStyles(loadCustomStyles: boolean = false): void {\n    const styles = objectCloneDeep(defaultStyles);\n    if (loadCustomStyles) {\n      if (this.userStyles != null && this.userStyles.constructor.name === 'Object') {\n        for (const [key, style] of Object.entries(styles)) {\n          style.styles = {\n            ...style.styles,\n            ...this.pickStyles(this.userStyles[key]),\n          };\n        }\n      } else {\n        console.warn(`[infi-markdown] Empty or invalid style model provided.`);\n      }\n    }\n    this.styles = styles;\n  }\n\n  setUserStyles(userStyles: UserStyles, shouldOverride: boolean): void {\n    if (this.isGlobalConfig) {\n      return;\n    }\n\n    if (shouldOverride) {\n      this.isGlobalConfig = true;\n    }\n\n    this.userStyles = userStyles;\n  }\n\n  setEntityTree(entity: Entity[]): void {\n    this.entityTree = entity;\n  }\n\n  get entity(): Entity[] {\n    return this.entityTree;\n  }\n\n  get entityValues(): Array<string> {\n    return this.entityTree.map((entity: Entity) => entity.text);\n  }\n\n  get typed(): boolean {\n    return this.entityTree.some(({ text }) => text);\n  }\n\n  private updateRowNos(index: number): void {\n    for (const entity of this.entityTree.slice(index)) {\n      entity.rowNo = ++index;\n    }\n  }\n\n  getEntityRow(key: number): Entity | null {\n    const singleRow = this.entityTree[key - 1];\n\n    if (!singleRow) {\n      return null;\n    }\n\n    return singleRow;\n  }\n\n  insertEntityRow(rowNo: number, rows: Array<Payload>): void {\n    this.entityTree.splice(rowNo - 1, 1, ...rows);\n    for (const row of rows) {\n      this.updateEntityTree({ ...row, opName: 'addText' });\n    }\n    this.updateRowNos(rowNo - 1);\n  }\n\n  removeEntityRow(rowNo: number, textToAppend: string): void {\n    this.entityTree.splice(rowNo - 1, 1);\n    const upperEntity = this.entityTree[rowNo - 2];\n    upperEntity.text += textToAppend;\n    this.updateEntityTree({ ...upperEntity, opName: 'addText' });\n    this.updateRowNos(rowNo - 1);\n  }\n\n  updateEntityTree(payload: Partial<Payload> | Payload): void {\n    const { rowNo, text = null, tag = 'paragraph', opName } = payload;\n\n    if (!this.entityTree[rowNo - 1]) {\n      this.entityTree[rowNo - 1] = {\n        rowNo,\n        text,\n        tag,\n        htmlContent: this.createSegment(text, tag, rowNo - 1),\n      };\n    } else {\n      let { text: currentText, tag: currentTag } = this.entityTree[rowNo - 1];\n\n      currentText = opName === 'addText' ? text : currentText;\n      currentTag = opName === 'setTag' ? tag : currentTag;\n\n      this.entityTree[rowNo - 1] = {\n        ...this.entityTree[rowNo - 1],\n        text: currentText,\n        tag: currentTag,\n        htmlContent: this.createSegment(currentText, currentTag, rowNo - 1),\n      };\n    }\n\n    if (tag === 'orderedList' || tag === 'unorderedList') {\n      this.rebuildAllSegments();\n    }\n\n    this.content$.next(this.buildView());\n  }\n\n  loadEntity(entity: Entity[] | null): void {\n    this.entity$.next(entity);\n  }\n\n  toggleStyles(state: boolean): void {\n    this.toggleStyles$.next(state);\n  }\n\n  private rebuildAllSegments(): void {\n    this.entityTree.forEach((entity: Entity, index: number) => {\n      entity.htmlContent = this.createSegment(entity.text, entity.tag, index);\n    });\n  }\n\n  public buildView(): string {\n    let html = '<div style=\"padding: 15px 50px\">';\n\n    for (const entity of this.entityTree) {\n      const _content = entity?.htmlContent || '';\n      html += _content;\n    }\n    html += '</div>';\n\n    return html;\n  }\n\n  private createSegment(text: string, tag: Tag, index: number): string {\n    let segment = '';\n\n    const { htmlTag, styles, parentHtmlTag = 'div' } = this.styles[tag];\n    const listElementType = this.checkListType(tag, index);\n\n    segment += listElementType.includes('middle') ? '' : '<div style=\"margin: 25px 0\">';\n    segment += listElementType.includes('first') ? `<${parentHtmlTag} style=\"margin: 25px 0\">` : '';\n    segment += `<${htmlTag} style=\"${this.injectInlineStyles(styles)}\">${text}</${htmlTag}>`;\n    segment += listElementType.includes('last') ? `</${parentHtmlTag}>` : '';\n    segment += listElementType.includes('middle') ? '' : '</div>';\n    return segment;\n  }\n\n  private checkListType(tag: Tag, entityTreeIndex: number): Array<'first' | 'last' | 'middle'> {\n    const attributes = [];\n    if (!['orderedList', 'unorderedList'].includes(tag)) {\n      return attributes;\n    }\n    attributes.push('middle');\n    this.entityTree[entityTreeIndex - 1]?.tag !== tag && attributes.push('first');\n    this.entityTree[entityTreeIndex + 1]?.tag !== tag && attributes.push('last');\n    return attributes;\n  }\n\n  private injectInlineStyles(styles): string {\n    if (!styles || !Object.keys(styles).length) {\n      return '';\n    }\n\n    return Object.entries(styles)\n      .map(([k, v]) => `${k}: ${v}`)\n      .join(';');\n  }\n\n  private pickStyles(styles: Style): SanitizedStyle | {} {\n    if (!styles) {\n      return {};\n    }\n\n    const sanitizedStyles = {};\n\n    for (const key of Object.keys(styles)) {\n      const properKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n      if (['[object String]', '[object Number]'].includes(Object.prototype.toString.call(styles[key]))) {\n        sanitizedStyles[properKey] = styles[key];\n      } else if (key === 'fontFamily' && Array.isArray(styles[key])) {\n        sanitizedStyles[properKey] = (styles[key] as string[])\n          .filter((font) => Object.prototype.toString.call(font) === '[object String]')\n          .map((str: string) => {\n            if (/\\s/.test(str)) {\n              return `'${str}'`;\n            }\n\n            return str;\n          })\n          .join(', ');\n      }\n    }\n\n    return sanitizedStyles;\n  }\n}\n","function node_walk(node: Node, func: Function) {\n  let result = func(node);\n  for (node = node.firstChild; result !== false && node; node = node.nextSibling) result = node_walk(node, func);\n  return result;\n}\n\nexport function getCaretPosition(elem) {\n  const sel = window.getSelection() as any;\n  let cum_length = [0, 0];\n\n  if (sel.anchorNode == elem) cum_length = [sel.anchorOffset, sel.extentOffset];\n  else {\n    const nodes_to_find = [sel.anchorNode, sel.extentNode];\n    if (!elem.contains(sel.anchorNode) /* || !elem.contains(sel.extentNode)*/) return undefined;\n    else {\n      let found = [0, 0] as [number | boolean, number | boolean];\n      let i;\n      node_walk(elem, function (node) {\n        for (i = 0; i < 2; i++) {\n          if (node == nodes_to_find[i]) {\n            found[i] = true;\n            if (found[i == 0 ? 1 : 0]) return false;\n          }\n        }\n\n        if (node.textContent && !node.firstChild) {\n          for (i = 0; i < 2; i++) {\n            if (!found[i]) cum_length[i] += node.textContent.length;\n          }\n        }\n      });\n      cum_length[0] += sel.anchorOffset;\n      cum_length[1] += sel.extentOffset;\n    }\n  }\n  if (cum_length[0] <= cum_length[1]) return cum_length;\n  return [cum_length[1], cum_length[0]];\n}\n\nexport function setCaretAtPosition(cp: number, element: HTMLElement): void {\n  const caretPosition = Math.min(cp, element.nodeValue.length);\n\n  const range = document.createRange();\n  range.setStart(element, caretPosition);\n  range.setEnd(element, caretPosition);\n\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\nexport function findAllOccurrencesOfPattern(str: string, pattern: string): Array<number> {\n  const indexes = [];\n  for (let i = str.indexOf(pattern); i > -1; i = str.indexOf(pattern, i + 1)) {\n    indexes.push(i);\n  }\n  return indexes;\n}\n\nexport function calculateCorrection(caretPosition: number, indexes: Array<number>, patternLength: number): number {\n  let finish = false;\n  let i = 0;\n  while (!finish) {\n    if (!indexes[i] || indexes[i] - i * patternLength >= caretPosition) {\n      finish = true;\n    } else {\n      i++;\n    }\n  }\n  return i;\n}\n\nexport function calculateCaretPosition(div: HTMLDivElement, ind: number): number {\n  let i = ind;\n  let cp = 0;\n  while (div.childNodes[i] && div.childNodes[i].nodeType === Node.TEXT_NODE) {\n    cp += div.childNodes[i].nodeValue.length;\n    i++;\n  }\n  return cp;\n}\n\n/**\n * Deep cloning for objects, default JS behavior for the rest of types\n * @param obj: T\n * @returns T\n */\nexport function objectCloneDeep<T>(obj: T): T {\n  const result: T = {} as T;\n  for (const [key, value] of Object.entries(obj)) {\n    if (Object.prototype.toString.call(value) === '[object Object]') {\n      result[key] = objectCloneDeep(value);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\nfunction matched<T>(x: T) {\n  return {\n    on: () => matched(x),\n    otherwise: () => x,\n  }\n}\n\nexport function match<T extends string>(x: T) {\n  return {\n    on: (pred: Function, fn: Function) => (pred(x) ? matched(fn(x)) : match(x)),\n    otherwise: (fn: Function) => fn(x),\n  }\n}\n","import { Component, OnInit, ViewEncapsulation, Input, Optional, Inject } from '@angular/core';\nimport { TreeService } from './_core/services/tree.service';\nimport { UserStyles } from './_core/models/Style';\nimport { USER_STYLE_CONFIG } from './_core/configs';\n\n@Component({\n  selector: 'ngx-infi-markdown',\n  template: `\n    <div class=\"row\">\n      <editor\n        appResizable\n        #appResizable=\"appResizable\"\n        [resizableMinWidth]=\"250\"\n        (onWidthChange)=\"handleWidthChange($event)\"\n        class=\"child\"\n      ></editor>\n\n      <preview [style.width]=\"previewWidth\" class=\"child\"></preview>\n\n      <div class=\"switcher\">\n        <label class=\"switch\">\n          <input (change)=\"toggleStyles($event)\" type=\"checkbox\" />\n          <span class=\"slider round\"></span>\n        </label>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./ngx-infi-markdown.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgxInfiMarkdownComponent implements OnInit {\n  @Input() set styles(value: UserStyles) {\n    this.treeService.setUserStyles(value, false);\n  }\n\n  previewWidth: string;\n\n  constructor(private treeService: TreeService, @Optional() @Inject(USER_STYLE_CONFIG) styleConfig: UserStyles) {\n    styleConfig && this.treeService.setUserStyles(styleConfig, true);\n  }\n\n  ngOnInit(): void {}\n\n  handleWidthChange(event: any): void {\n    const { percWidth } = event;\n    this.previewWidth = 100 - percWidth + '%';\n  }\n\n  toggleStyles(event: any): void {\n    const status = event.target.checked;\n    this.treeService.toggleStyles(status);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxInfiMarkdownComponent } from './ngx-infi-markdown.component';\nimport { EditorComponent } from './_core/components/editor/editor.component';\nimport { PreviewComponent } from './_core/components/preview/preview.component';\nimport { ResizableDirective } from './_core/directives/resizable.directive';\nimport { CommonModule } from '@angular/common';\nimport { SanitizeHtmlPipe } from './_core/pipes/sanitizeHtml.pipe';\nimport { MinToolbarComponent } from './_core/components/min-toolbar/min-toolbar.component';\nimport { TooltipDirective } from './_core/directives/tooltip.directive';\nimport { TooltipComponent } from './_core/components/tooltip/tooltip.component';\nimport { UserStyles } from './_core/models/Style';\nimport { USER_STYLE_CONFIG } from './_core/configs';\nimport { StorageService, LocalStorageService, SessionStorageService } from './_core/services/storage.service';\nimport { match } from './_core/utils';\n\ntype Config = Partial<{ \n  styles: UserStyles, \n  storageType: 'none' | 'localStorage' | 'sessionStorage' \n}>;\n\n@NgModule({\n  declarations: [\n    NgxInfiMarkdownComponent,\n    EditorComponent,\n    PreviewComponent,\n    ResizableDirective,\n    TooltipDirective,\n    SanitizeHtmlPipe,\n    TooltipComponent,\n    MinToolbarComponent,\n  ],\n  imports: [CommonModule],\n  exports: [NgxInfiMarkdownComponent],\n})\nexport class NgxInfiMarkdownModule {\n  static forRoot({ styles = null, storageType = 'none' }: Config): ModuleWithProviders {\n    return {\n      ngModule: NgxInfiMarkdownModule,\n      providers: [\n        {\n          provide: USER_STYLE_CONFIG,\n          useValue: styles,\n        },\n        {\n          provide: StorageService,\n          useFactory: () => {\n            return match(storageType)\n              .on((x: string) => x === 'localStorage', () => new LocalStorageService())\n              .on((x: string) => x === 'sessionStorage', () => new SessionStorageService())\n              .otherwise((x: string) => null)\n          }\n        }\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TreeService } from './_core/services/tree.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxInfiMarkdownService {\n  constructor(private treeService: TreeService) {}\n\n  /**\n   * Returns observable of currently created content\n   *\n   * @return {Observable} content observable\n   */\n  html$(): Observable<string> {\n    return this.treeService.contentOb$;\n  }\n\n  /**\n   * Returns currently created content synchronously\n   *\n   * @return {string} content\n   */\n  getHtml(): string {\n    return this.treeService.buildView();\n  }\n}\n","/*\n * Public API Surface of ngx-infi-markdown\n */\n\nexport * from './lib/ngx-infi-markdown.service';\nexport * from './lib/ngx-infi-markdown.component';\nexport * from './lib/ngx-infi-markdown.module';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  articleStyles = {\n    primaryHeader: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      textAlign: 'center',\n      fontSize: '72px',\n      fontWeight: 600,\n      margin: '60px 0',\n      color: '#312b80',\n    },\n    secondaryHeader: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontSize: '32px',\n      letterSpacing: '.42px',\n      fontWeight: 400,\n      margin: '0 0 50px',\n      color: '#312b80',\n    },\n    tertiaryHeader: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontSize: '42px',\n      letterSpacing: '.42px',\n      fontWeight: 600,\n      margin: '0 0 50px',\n      color: '#312b80',\n    },\n    quaternaryHeader: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontStyle: 'normal',\n      fontSize: '30px',\n      color: 'rgb(61, 90, 254)',\n      textAlign: 'center',\n    },\n    orderedList: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontSize: '21px',\n      letterSpacing: '.84px',\n      color: '#312b80',\n    },\n    unorderedList: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontSize: '21px',\n      letterSpacing: '.84px',\n      color: '#312b80',\n    },\n    paragraph: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontSize: '21px',\n      letterSpacing: '.84px',\n      margin: '0 0 50px',\n      color: '#312b80',\n    },\n    quote: {\n      fontFamily: ['Playfair Display', 'sans-serif'],\n      fontStyle: 'italic',\n      fontSize: '24px',\n      borderLeft: '1px solid #3d5afe',\n      color: 'rgb(49, 43, 128)',\n      textAlign: 'left',\n    },\n  };\n}\n","<div class=\"container\">\n    <img src=\"../assets/logo.png\">\n    <div class=\"text\">\n        <p>This is a demo of the library. The view presented below will render exactly as it looks, if you install and inject the component into your project.\n        If you notice any issues or bugs, please create an issue in GitHub repository or you can fix it by yourself and create a pull request. I strongly encourage you to create and extend the functionality of this library by pushing your branch with code covered with tests. Enjoy.</p>\n    </div>\n</div>\n\n<ngx-infi-markdown\n    [styles]=\"articleStyles\"\n></ngx-infi-markdown>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { NgxInfiMarkdownModule } from 'projects/ngx-infi-markdown/src/public-api';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule, \n    NgxInfiMarkdownModule.forRoot({\n      storageType: 'localStorage',\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}